import bs4
import requests
import vk_api
from vk_api.longpoll import VkLongPoll, VkEventType


class VkBot:
    def __init__(self, user_id):
        # –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è —é–∑–µ—Ä id
        self._USER_ID = user_id
        # –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø–æ–ª—É—á–∞–µ–º–æ–µ —Ñ—É–Ω–∫—Ü–∏–µ–π _get_user_name_from_vk_id
        self._USERNAME = self._get_user_name_from_vk_id(user_id)
        # –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
        self._COMMANDS = ["–ø—Ä–∏–≤–µ—Ç",
                          "/—Å–µ–≥–æ–¥–Ω—è",
                          "/–∑–∞–≤—Ç—Ä–∞",
                          "ghbdtn",
                          "–ø–æ–∫–∞"]

    #–ú–µ—Ç–æ–¥, –ø–æ–ª—É—á–∞—é—â–∏–π –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ –µ–≥–æ id
    def _get_user_name_from_vk_id(self, user_id):
        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º id —é–∑–µ—Ä–∞
        request = requests.get("https://vk.com/id" + str(user_id))
        # –ø–∞—Ä—Å–∏–º
        bs = bs4.BeautifulSoup(request.text, "html.parser")

        user_name = self._clean_all_tag_from_str(bs.findAll("title")[0])

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        return user_name.split()[0]


    # –ú–µ—Ç–æ–¥, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∏–π —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∏–π –æ—Ç–≤–µ—Ç
    def new_message(self, message):

        # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ. –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–¥–Ω–∏–º–∞–µ–º –≤ –≤–µ—Ä—Ö–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–≥ –ø–∏—Å–∞—Ç—å –∏ —Ç–∞–∫, –∏ —Ç–∞–∫
        if message.lower() == self._COMMANDS[0]:
            return f"–ü—Ä–∏–≤–µ—Ç, {self._USERNAME}! –Ø - –ó–æ–¥–∏–∞–∫—É—Å - —Ç–≤–æ–π –ø—Ä–æ–≤–æ–¥–Ω–∏–∫ –≤ –º–∏—Ä —Ç–æ–ª–∫–æ–≤–∞–Ω–∏—è –∑–≤—ë–∑–¥.\n –í–æ—Ç —Å–ø–∏—Å–æ–∫ –º–æ–∏—Ö –∫–æ–º–∞–Ω–¥:\n" \
                   f"/–∫–æ–º–∞–Ω–¥—ã - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã;\n" \
                   f"/—Å–µ–≥–æ–¥–Ω—è - –≥–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –≤—Å–µ—Ö –∑–Ω–∞–∫–æ–≤ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è;\n" \
                   f"/–∑–∞–≤—Ç—Ä–∞ - –≥–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –≤—Å–µ—Ö –∑–Ω–∞–∫–æ–≤ –Ω–∞ –∑–∞–≤—Ç—Ä–∞;\n" \
                   f"/–ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π - –≥–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞."

        # –ì–æ—Ä–æ—Å–∫–æ–ø—ã
        # –ì–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
        elif message.lower() == self._COMMANDS[1]:
            return f"–í–æ—Ç —á—Ç–æ –∑–≤—ë–∑–¥—ã –ø—Ä–µ–¥–≤–µ—â–∞—é—Ç –¥–ª—è –≤—Å–µ—Ö –∑–Ω–∞–∫–æ–≤ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è: \n"+self._get_today_horoscope()
        # –ì–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ –∑–∞–≤—Ç—Ä–∞
        elif message.lower() == self._COMMANDS[2]:
            return f"–í–æ—Ç —á—Ç–æ –∑–≤—ë–∑–¥—ã —Ä–∞–∑–≥–ª—è–¥–µ–ª–∏ –¥–ª—è –≤—Å–µ—Ö –∑–Ω–∞–∫–æ–≤ –Ω–∞ –∑–∞–≤—Ç—Ä–∞: \n"+self._get_tomorrow_horoscope()
        # –†–∞—Å–∫–ª–∞–¥–∫–∞
        elif message.lower() == self._COMMANDS[3]:
            return f"–î–ª—è –æ–±—â–µ–Ω–∏—è –ø–æ–º–µ–Ω—è–π —Ä–∞—Å–∫–ª–∞–¥–∫—É –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã - —è –ø–æ–Ω–∏–º–∞—é —Ç–æ–ª—å–∫–æ —Ä—É—Å—Å–∫–∏–π üòú"
        # –ü—Ä–æ—â–∞–Ω–∏–µ. –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–¥–Ω–∏–º–∞–µ–º –≤ –≤–µ—Ä—Ö–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–≥ –ø–∏—Å–∞—Ç—å –∏ —Ç–∞–∫, –∏ —Ç–∞–∫
        elif message.lower() == self._COMMANDS[4]:
            return f"–ü–æ–∫–∞-–ø–æ–∫–∞, {self._USERNAME}!"
        else:
            return f"–Ø –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–Ω—è–ª..."

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –≥–æ—Ä–æ—Å–∫–æ–ø–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:
    def _get_today_horoscope(self):
        # –ü–æ—Å—ã–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –≥–æ—Ä–æ—Å–∫–æ–ø–æ–º
        request = requests.get("https://horo.mail.ru/prediction/today/")
        # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç, –ø–∞—Ä—Å–∏–º
        soup = bs4.BeautifulSoup(request.text, "html.parser")
        # –î–æ—Å—Ç–∞—ë–º –Ω—É–∂–Ω—ã–π –Ω–∞–º —Ç–µ–∫—Å—Ç
        headlines = soup.find('div', 'article__item article__item_alignment_left article__item_html').getText()
        print(headlines)
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–µ–∫—Å—Ç
        return (headlines)

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –≥–æ—Ä–æ—Å–∫–æ–ø–∞ –Ω–∞ –∑–∞–≤—Ç—Ä–∞:
    def _get_tomorrow_horoscope(self):
        request = requests.get("https://horo.mail.ru/prediction/tomorrow/")
        soup = bs4.BeautifulSoup(request.text, "html.parser")
        headlines = soup.find('div', 'article__item article__item_alignment_left article__item_html').getText()
        print(headlines)
        return (headlines)



 # –ú–µ—Ç–æ–¥ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –æ—Ç –Ω–µ–Ω—É–∂–Ω—ã—Ö —Ç—ç–≥–æ–≤
    @staticmethod
    def _clean_all_tag_from_str(string_line):
        """
        –û—á–∏—Å—Ç–∫–∞ —Å—Ç—Ä–æ–∫–∏ stringLine –æ—Ç —Ç—ç–≥–æ–≤ –∏ –∏—Ö —Å–æ–¥–µ—Ä–∂–∏–º—ã—Ö
        :param string_line: –û—á–∏—â–∞–µ–º–∞—è —Å—Ç—Ä–æ–∫–∞
        :return: –æ—á–∏—â–µ–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞
        """
        result = ""
        not_skip = True
        for i in list(string_line):
            if not_skip:
                if i == "<":
                    not_skip = False
                else:
                    result += i
            else:
                if i == ">":
                    not_skip = True

        return result
